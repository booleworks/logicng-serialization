// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: solver_commons.proto
// Protobuf Java Version: 4.26.1

package com.booleworks.logicng.serialization.solvers.sat;

public final class ProtoBufSolverCommons {
  private ProtoBufSolverCommons() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      ProtoBufSolverCommons.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code solver.PBClauseMinimization}
   */
  public enum PBClauseMinimization
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NONE = 0;</code>
     */
    NONE(0),
    /**
     * <code>BASIC = 1;</code>
     */
    BASIC(1),
    /**
     * <code>DEEP = 2;</code>
     */
    DEEP(2),
    UNRECOGNIZED(-1),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        PBClauseMinimization.class.getName());
    }
    /**
     * <code>NONE = 0;</code>
     */
    public static final int NONE_VALUE = 0;
    /**
     * <code>BASIC = 1;</code>
     */
    public static final int BASIC_VALUE = 1;
    /**
     * <code>DEEP = 2;</code>
     */
    public static final int DEEP_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PBClauseMinimization valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PBClauseMinimization forNumber(int value) {
      switch (value) {
        case 0: return NONE;
        case 1: return BASIC;
        case 2: return DEEP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PBClauseMinimization>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PBClauseMinimization> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PBClauseMinimization>() {
            public PBClauseMinimization findValueByNumber(int number) {
              return PBClauseMinimization.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.getDescriptor().getEnumTypes().get(0);
    }

    private static final PBClauseMinimization[] VALUES = values();

    public static PBClauseMinimization valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PBClauseMinimization(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:solver.PBClauseMinimization)
  }

  /**
   * Protobuf enum {@code solver.PBCnfMethod}
   */
  public enum PBCnfMethod
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FACTORY_CNF = 0;</code>
     */
    FACTORY_CNF(0),
    /**
     * <code>PG_ON_SOLVER = 1;</code>
     */
    PG_ON_SOLVER(1),
    /**
     * <code>FULL_PG_ON_SOLVER = 2;</code>
     */
    FULL_PG_ON_SOLVER(2),
    UNRECOGNIZED(-1),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        PBCnfMethod.class.getName());
    }
    /**
     * <code>FACTORY_CNF = 0;</code>
     */
    public static final int FACTORY_CNF_VALUE = 0;
    /**
     * <code>PG_ON_SOLVER = 1;</code>
     */
    public static final int PG_ON_SOLVER_VALUE = 1;
    /**
     * <code>FULL_PG_ON_SOLVER = 2;</code>
     */
    public static final int FULL_PG_ON_SOLVER_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PBCnfMethod valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PBCnfMethod forNumber(int value) {
      switch (value) {
        case 0: return FACTORY_CNF;
        case 1: return PG_ON_SOLVER;
        case 2: return FULL_PG_ON_SOLVER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PBCnfMethod>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PBCnfMethod> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PBCnfMethod>() {
            public PBCnfMethod findValueByNumber(int number) {
              return PBCnfMethod.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.getDescriptor().getEnumTypes().get(1);
    }

    private static final PBCnfMethod[] VALUES = values();

    public static PBCnfMethod valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PBCnfMethod(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:solver.PBCnfMethod)
  }

  public interface PBSatSolverConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:solver.PBSatSolverConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool proofGeneration = 1;</code>
     * @return The proofGeneration.
     */
    boolean getProofGeneration();

    /**
     * <code>bool useAtMostClauses = 2;</code>
     * @return The useAtMostClauses.
     */
    boolean getUseAtMostClauses();

    /**
     * <code>.solver.PBCnfMethod cnfMethod = 3;</code>
     * @return The enum numeric value on the wire for cnfMethod.
     */
    int getCnfMethodValue();
    /**
     * <code>.solver.PBCnfMethod cnfMethod = 3;</code>
     * @return The cnfMethod.
     */
    com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBCnfMethod getCnfMethod();

    /**
     * <code>.solver.PBClauseMinimization clauseMinimization = 4;</code>
     * @return The enum numeric value on the wire for clauseMinimization.
     */
    int getClauseMinimizationValue();
    /**
     * <code>.solver.PBClauseMinimization clauseMinimization = 4;</code>
     * @return The clauseMinimization.
     */
    com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization getClauseMinimization();

    /**
     * <code>bool initialPhase = 5;</code>
     * @return The initialPhase.
     */
    boolean getInitialPhase();

    /**
     * <code>double varDecay = 6;</code>
     * @return The varDecay.
     */
    double getVarDecay();

    /**
     * <code>double varInc = 7;</code>
     * @return The varInc.
     */
    double getVarInc();

    /**
     * <code>int32 restartFirst = 8;</code>
     * @return The restartFirst.
     */
    int getRestartFirst();

    /**
     * <code>double restartInc = 9;</code>
     * @return The restartInc.
     */
    double getRestartInc();

    /**
     * <code>double clauseDecay = 10;</code>
     * @return The clauseDecay.
     */
    double getClauseDecay();

    /**
     * <code>int32 lbLBDMinimizingClause = 11;</code>
     * @return The lbLBDMinimizingClause.
     */
    int getLbLBDMinimizingClause();

    /**
     * <code>int32 lbLBDFrozenClause = 12;</code>
     * @return The lbLBDFrozenClause.
     */
    int getLbLBDFrozenClause();

    /**
     * <code>int32 lbSizeMinimizingClause = 13;</code>
     * @return The lbSizeMinimizingClause.
     */
    int getLbSizeMinimizingClause();

    /**
     * <code>int32 firstReduceDB = 14;</code>
     * @return The firstReduceDB.
     */
    int getFirstReduceDB();

    /**
     * <code>int32 specialIncReduceDB = 15;</code>
     * @return The specialIncReduceDB.
     */
    int getSpecialIncReduceDB();

    /**
     * <code>int32 incReduceDB = 16;</code>
     * @return The incReduceDB.
     */
    int getIncReduceDB();

    /**
     * <code>double factorK = 17;</code>
     * @return The factorK.
     */
    double getFactorK();

    /**
     * <code>double factorR = 18;</code>
     * @return The factorR.
     */
    double getFactorR();

    /**
     * <code>int32 sizeLBDQueue = 19;</code>
     * @return The sizeLBDQueue.
     */
    int getSizeLBDQueue();

    /**
     * <code>int32 sizeTrailQueue = 20;</code>
     * @return The sizeTrailQueue.
     */
    int getSizeTrailQueue();

    /**
     * <code>bool reduceOnSize = 21;</code>
     * @return The reduceOnSize.
     */
    boolean getReduceOnSize();

    /**
     * <code>int32 reduceOnSizeSize = 22;</code>
     * @return The reduceOnSizeSize.
     */
    int getReduceOnSizeSize();

    /**
     * <code>double maxVarDecay = 23;</code>
     * @return The maxVarDecay.
     */
    double getMaxVarDecay();
  }
  /**
   * Protobuf type {@code solver.PBSatSolverConfig}
   */
  public static final class PBSatSolverConfig extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:solver.PBSatSolverConfig)
      PBSatSolverConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        PBSatSolverConfig.class.getName());
    }
    // Use PBSatSolverConfig.newBuilder() to construct.
    private PBSatSolverConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private PBSatSolverConfig() {
      cnfMethod_ = 0;
      clauseMinimization_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.internal_static_solver_PBSatSolverConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.internal_static_solver_PBSatSolverConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig.class, com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig.Builder.class);
    }

    public static final int PROOFGENERATION_FIELD_NUMBER = 1;
    private boolean proofGeneration_ = false;
    /**
     * <code>bool proofGeneration = 1;</code>
     * @return The proofGeneration.
     */
    @java.lang.Override
    public boolean getProofGeneration() {
      return proofGeneration_;
    }

    public static final int USEATMOSTCLAUSES_FIELD_NUMBER = 2;
    private boolean useAtMostClauses_ = false;
    /**
     * <code>bool useAtMostClauses = 2;</code>
     * @return The useAtMostClauses.
     */
    @java.lang.Override
    public boolean getUseAtMostClauses() {
      return useAtMostClauses_;
    }

    public static final int CNFMETHOD_FIELD_NUMBER = 3;
    private int cnfMethod_ = 0;
    /**
     * <code>.solver.PBCnfMethod cnfMethod = 3;</code>
     * @return The enum numeric value on the wire for cnfMethod.
     */
    @java.lang.Override public int getCnfMethodValue() {
      return cnfMethod_;
    }
    /**
     * <code>.solver.PBCnfMethod cnfMethod = 3;</code>
     * @return The cnfMethod.
     */
    @java.lang.Override public com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBCnfMethod getCnfMethod() {
      com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBCnfMethod result = com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBCnfMethod.forNumber(cnfMethod_);
      return result == null ? com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBCnfMethod.UNRECOGNIZED : result;
    }

    public static final int CLAUSEMINIMIZATION_FIELD_NUMBER = 4;
    private int clauseMinimization_ = 0;
    /**
     * <code>.solver.PBClauseMinimization clauseMinimization = 4;</code>
     * @return The enum numeric value on the wire for clauseMinimization.
     */
    @java.lang.Override public int getClauseMinimizationValue() {
      return clauseMinimization_;
    }
    /**
     * <code>.solver.PBClauseMinimization clauseMinimization = 4;</code>
     * @return The clauseMinimization.
     */
    @java.lang.Override public com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization getClauseMinimization() {
      com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization result = com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization.forNumber(clauseMinimization_);
      return result == null ? com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization.UNRECOGNIZED : result;
    }

    public static final int INITIALPHASE_FIELD_NUMBER = 5;
    private boolean initialPhase_ = false;
    /**
     * <code>bool initialPhase = 5;</code>
     * @return The initialPhase.
     */
    @java.lang.Override
    public boolean getInitialPhase() {
      return initialPhase_;
    }

    public static final int VARDECAY_FIELD_NUMBER = 6;
    private double varDecay_ = 0D;
    /**
     * <code>double varDecay = 6;</code>
     * @return The varDecay.
     */
    @java.lang.Override
    public double getVarDecay() {
      return varDecay_;
    }

    public static final int VARINC_FIELD_NUMBER = 7;
    private double varInc_ = 0D;
    /**
     * <code>double varInc = 7;</code>
     * @return The varInc.
     */
    @java.lang.Override
    public double getVarInc() {
      return varInc_;
    }

    public static final int RESTARTFIRST_FIELD_NUMBER = 8;
    private int restartFirst_ = 0;
    /**
     * <code>int32 restartFirst = 8;</code>
     * @return The restartFirst.
     */
    @java.lang.Override
    public int getRestartFirst() {
      return restartFirst_;
    }

    public static final int RESTARTINC_FIELD_NUMBER = 9;
    private double restartInc_ = 0D;
    /**
     * <code>double restartInc = 9;</code>
     * @return The restartInc.
     */
    @java.lang.Override
    public double getRestartInc() {
      return restartInc_;
    }

    public static final int CLAUSEDECAY_FIELD_NUMBER = 10;
    private double clauseDecay_ = 0D;
    /**
     * <code>double clauseDecay = 10;</code>
     * @return The clauseDecay.
     */
    @java.lang.Override
    public double getClauseDecay() {
      return clauseDecay_;
    }

    public static final int LBLBDMINIMIZINGCLAUSE_FIELD_NUMBER = 11;
    private int lbLBDMinimizingClause_ = 0;
    /**
     * <code>int32 lbLBDMinimizingClause = 11;</code>
     * @return The lbLBDMinimizingClause.
     */
    @java.lang.Override
    public int getLbLBDMinimizingClause() {
      return lbLBDMinimizingClause_;
    }

    public static final int LBLBDFROZENCLAUSE_FIELD_NUMBER = 12;
    private int lbLBDFrozenClause_ = 0;
    /**
     * <code>int32 lbLBDFrozenClause = 12;</code>
     * @return The lbLBDFrozenClause.
     */
    @java.lang.Override
    public int getLbLBDFrozenClause() {
      return lbLBDFrozenClause_;
    }

    public static final int LBSIZEMINIMIZINGCLAUSE_FIELD_NUMBER = 13;
    private int lbSizeMinimizingClause_ = 0;
    /**
     * <code>int32 lbSizeMinimizingClause = 13;</code>
     * @return The lbSizeMinimizingClause.
     */
    @java.lang.Override
    public int getLbSizeMinimizingClause() {
      return lbSizeMinimizingClause_;
    }

    public static final int FIRSTREDUCEDB_FIELD_NUMBER = 14;
    private int firstReduceDB_ = 0;
    /**
     * <code>int32 firstReduceDB = 14;</code>
     * @return The firstReduceDB.
     */
    @java.lang.Override
    public int getFirstReduceDB() {
      return firstReduceDB_;
    }

    public static final int SPECIALINCREDUCEDB_FIELD_NUMBER = 15;
    private int specialIncReduceDB_ = 0;
    /**
     * <code>int32 specialIncReduceDB = 15;</code>
     * @return The specialIncReduceDB.
     */
    @java.lang.Override
    public int getSpecialIncReduceDB() {
      return specialIncReduceDB_;
    }

    public static final int INCREDUCEDB_FIELD_NUMBER = 16;
    private int incReduceDB_ = 0;
    /**
     * <code>int32 incReduceDB = 16;</code>
     * @return The incReduceDB.
     */
    @java.lang.Override
    public int getIncReduceDB() {
      return incReduceDB_;
    }

    public static final int FACTORK_FIELD_NUMBER = 17;
    private double factorK_ = 0D;
    /**
     * <code>double factorK = 17;</code>
     * @return The factorK.
     */
    @java.lang.Override
    public double getFactorK() {
      return factorK_;
    }

    public static final int FACTORR_FIELD_NUMBER = 18;
    private double factorR_ = 0D;
    /**
     * <code>double factorR = 18;</code>
     * @return The factorR.
     */
    @java.lang.Override
    public double getFactorR() {
      return factorR_;
    }

    public static final int SIZELBDQUEUE_FIELD_NUMBER = 19;
    private int sizeLBDQueue_ = 0;
    /**
     * <code>int32 sizeLBDQueue = 19;</code>
     * @return The sizeLBDQueue.
     */
    @java.lang.Override
    public int getSizeLBDQueue() {
      return sizeLBDQueue_;
    }

    public static final int SIZETRAILQUEUE_FIELD_NUMBER = 20;
    private int sizeTrailQueue_ = 0;
    /**
     * <code>int32 sizeTrailQueue = 20;</code>
     * @return The sizeTrailQueue.
     */
    @java.lang.Override
    public int getSizeTrailQueue() {
      return sizeTrailQueue_;
    }

    public static final int REDUCEONSIZE_FIELD_NUMBER = 21;
    private boolean reduceOnSize_ = false;
    /**
     * <code>bool reduceOnSize = 21;</code>
     * @return The reduceOnSize.
     */
    @java.lang.Override
    public boolean getReduceOnSize() {
      return reduceOnSize_;
    }

    public static final int REDUCEONSIZESIZE_FIELD_NUMBER = 22;
    private int reduceOnSizeSize_ = 0;
    /**
     * <code>int32 reduceOnSizeSize = 22;</code>
     * @return The reduceOnSizeSize.
     */
    @java.lang.Override
    public int getReduceOnSizeSize() {
      return reduceOnSizeSize_;
    }

    public static final int MAXVARDECAY_FIELD_NUMBER = 23;
    private double maxVarDecay_ = 0D;
    /**
     * <code>double maxVarDecay = 23;</code>
     * @return The maxVarDecay.
     */
    @java.lang.Override
    public double getMaxVarDecay() {
      return maxVarDecay_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (proofGeneration_ != false) {
        output.writeBool(1, proofGeneration_);
      }
      if (useAtMostClauses_ != false) {
        output.writeBool(2, useAtMostClauses_);
      }
      if (cnfMethod_ != com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBCnfMethod.FACTORY_CNF.getNumber()) {
        output.writeEnum(3, cnfMethod_);
      }
      if (clauseMinimization_ != com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization.NONE.getNumber()) {
        output.writeEnum(4, clauseMinimization_);
      }
      if (initialPhase_ != false) {
        output.writeBool(5, initialPhase_);
      }
      if (java.lang.Double.doubleToRawLongBits(varDecay_) != 0) {
        output.writeDouble(6, varDecay_);
      }
      if (java.lang.Double.doubleToRawLongBits(varInc_) != 0) {
        output.writeDouble(7, varInc_);
      }
      if (restartFirst_ != 0) {
        output.writeInt32(8, restartFirst_);
      }
      if (java.lang.Double.doubleToRawLongBits(restartInc_) != 0) {
        output.writeDouble(9, restartInc_);
      }
      if (java.lang.Double.doubleToRawLongBits(clauseDecay_) != 0) {
        output.writeDouble(10, clauseDecay_);
      }
      if (lbLBDMinimizingClause_ != 0) {
        output.writeInt32(11, lbLBDMinimizingClause_);
      }
      if (lbLBDFrozenClause_ != 0) {
        output.writeInt32(12, lbLBDFrozenClause_);
      }
      if (lbSizeMinimizingClause_ != 0) {
        output.writeInt32(13, lbSizeMinimizingClause_);
      }
      if (firstReduceDB_ != 0) {
        output.writeInt32(14, firstReduceDB_);
      }
      if (specialIncReduceDB_ != 0) {
        output.writeInt32(15, specialIncReduceDB_);
      }
      if (incReduceDB_ != 0) {
        output.writeInt32(16, incReduceDB_);
      }
      if (java.lang.Double.doubleToRawLongBits(factorK_) != 0) {
        output.writeDouble(17, factorK_);
      }
      if (java.lang.Double.doubleToRawLongBits(factorR_) != 0) {
        output.writeDouble(18, factorR_);
      }
      if (sizeLBDQueue_ != 0) {
        output.writeInt32(19, sizeLBDQueue_);
      }
      if (sizeTrailQueue_ != 0) {
        output.writeInt32(20, sizeTrailQueue_);
      }
      if (reduceOnSize_ != false) {
        output.writeBool(21, reduceOnSize_);
      }
      if (reduceOnSizeSize_ != 0) {
        output.writeInt32(22, reduceOnSizeSize_);
      }
      if (java.lang.Double.doubleToRawLongBits(maxVarDecay_) != 0) {
        output.writeDouble(23, maxVarDecay_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (proofGeneration_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, proofGeneration_);
      }
      if (useAtMostClauses_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, useAtMostClauses_);
      }
      if (cnfMethod_ != com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBCnfMethod.FACTORY_CNF.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, cnfMethod_);
      }
      if (clauseMinimization_ != com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization.NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, clauseMinimization_);
      }
      if (initialPhase_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, initialPhase_);
      }
      if (java.lang.Double.doubleToRawLongBits(varDecay_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, varDecay_);
      }
      if (java.lang.Double.doubleToRawLongBits(varInc_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, varInc_);
      }
      if (restartFirst_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, restartFirst_);
      }
      if (java.lang.Double.doubleToRawLongBits(restartInc_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, restartInc_);
      }
      if (java.lang.Double.doubleToRawLongBits(clauseDecay_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, clauseDecay_);
      }
      if (lbLBDMinimizingClause_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, lbLBDMinimizingClause_);
      }
      if (lbLBDFrozenClause_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, lbLBDFrozenClause_);
      }
      if (lbSizeMinimizingClause_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, lbSizeMinimizingClause_);
      }
      if (firstReduceDB_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, firstReduceDB_);
      }
      if (specialIncReduceDB_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, specialIncReduceDB_);
      }
      if (incReduceDB_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, incReduceDB_);
      }
      if (java.lang.Double.doubleToRawLongBits(factorK_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(17, factorK_);
      }
      if (java.lang.Double.doubleToRawLongBits(factorR_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(18, factorR_);
      }
      if (sizeLBDQueue_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, sizeLBDQueue_);
      }
      if (sizeTrailQueue_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, sizeTrailQueue_);
      }
      if (reduceOnSize_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(21, reduceOnSize_);
      }
      if (reduceOnSizeSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, reduceOnSizeSize_);
      }
      if (java.lang.Double.doubleToRawLongBits(maxVarDecay_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(23, maxVarDecay_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig)) {
        return super.equals(obj);
      }
      com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig other = (com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig) obj;

      if (getProofGeneration()
          != other.getProofGeneration()) return false;
      if (getUseAtMostClauses()
          != other.getUseAtMostClauses()) return false;
      if (cnfMethod_ != other.cnfMethod_) return false;
      if (clauseMinimization_ != other.clauseMinimization_) return false;
      if (getInitialPhase()
          != other.getInitialPhase()) return false;
      if (java.lang.Double.doubleToLongBits(getVarDecay())
          != java.lang.Double.doubleToLongBits(
              other.getVarDecay())) return false;
      if (java.lang.Double.doubleToLongBits(getVarInc())
          != java.lang.Double.doubleToLongBits(
              other.getVarInc())) return false;
      if (getRestartFirst()
          != other.getRestartFirst()) return false;
      if (java.lang.Double.doubleToLongBits(getRestartInc())
          != java.lang.Double.doubleToLongBits(
              other.getRestartInc())) return false;
      if (java.lang.Double.doubleToLongBits(getClauseDecay())
          != java.lang.Double.doubleToLongBits(
              other.getClauseDecay())) return false;
      if (getLbLBDMinimizingClause()
          != other.getLbLBDMinimizingClause()) return false;
      if (getLbLBDFrozenClause()
          != other.getLbLBDFrozenClause()) return false;
      if (getLbSizeMinimizingClause()
          != other.getLbSizeMinimizingClause()) return false;
      if (getFirstReduceDB()
          != other.getFirstReduceDB()) return false;
      if (getSpecialIncReduceDB()
          != other.getSpecialIncReduceDB()) return false;
      if (getIncReduceDB()
          != other.getIncReduceDB()) return false;
      if (java.lang.Double.doubleToLongBits(getFactorK())
          != java.lang.Double.doubleToLongBits(
              other.getFactorK())) return false;
      if (java.lang.Double.doubleToLongBits(getFactorR())
          != java.lang.Double.doubleToLongBits(
              other.getFactorR())) return false;
      if (getSizeLBDQueue()
          != other.getSizeLBDQueue()) return false;
      if (getSizeTrailQueue()
          != other.getSizeTrailQueue()) return false;
      if (getReduceOnSize()
          != other.getReduceOnSize()) return false;
      if (getReduceOnSizeSize()
          != other.getReduceOnSizeSize()) return false;
      if (java.lang.Double.doubleToLongBits(getMaxVarDecay())
          != java.lang.Double.doubleToLongBits(
              other.getMaxVarDecay())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PROOFGENERATION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getProofGeneration());
      hash = (37 * hash) + USEATMOSTCLAUSES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getUseAtMostClauses());
      hash = (37 * hash) + CNFMETHOD_FIELD_NUMBER;
      hash = (53 * hash) + cnfMethod_;
      hash = (37 * hash) + CLAUSEMINIMIZATION_FIELD_NUMBER;
      hash = (53 * hash) + clauseMinimization_;
      hash = (37 * hash) + INITIALPHASE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getInitialPhase());
      hash = (37 * hash) + VARDECAY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getVarDecay()));
      hash = (37 * hash) + VARINC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getVarInc()));
      hash = (37 * hash) + RESTARTFIRST_FIELD_NUMBER;
      hash = (53 * hash) + getRestartFirst();
      hash = (37 * hash) + RESTARTINC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getRestartInc()));
      hash = (37 * hash) + CLAUSEDECAY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getClauseDecay()));
      hash = (37 * hash) + LBLBDMINIMIZINGCLAUSE_FIELD_NUMBER;
      hash = (53 * hash) + getLbLBDMinimizingClause();
      hash = (37 * hash) + LBLBDFROZENCLAUSE_FIELD_NUMBER;
      hash = (53 * hash) + getLbLBDFrozenClause();
      hash = (37 * hash) + LBSIZEMINIMIZINGCLAUSE_FIELD_NUMBER;
      hash = (53 * hash) + getLbSizeMinimizingClause();
      hash = (37 * hash) + FIRSTREDUCEDB_FIELD_NUMBER;
      hash = (53 * hash) + getFirstReduceDB();
      hash = (37 * hash) + SPECIALINCREDUCEDB_FIELD_NUMBER;
      hash = (53 * hash) + getSpecialIncReduceDB();
      hash = (37 * hash) + INCREDUCEDB_FIELD_NUMBER;
      hash = (53 * hash) + getIncReduceDB();
      hash = (37 * hash) + FACTORK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getFactorK()));
      hash = (37 * hash) + FACTORR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getFactorR()));
      hash = (37 * hash) + SIZELBDQUEUE_FIELD_NUMBER;
      hash = (53 * hash) + getSizeLBDQueue();
      hash = (37 * hash) + SIZETRAILQUEUE_FIELD_NUMBER;
      hash = (53 * hash) + getSizeTrailQueue();
      hash = (37 * hash) + REDUCEONSIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getReduceOnSize());
      hash = (37 * hash) + REDUCEONSIZESIZE_FIELD_NUMBER;
      hash = (53 * hash) + getReduceOnSizeSize();
      hash = (37 * hash) + MAXVARDECAY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMaxVarDecay()));
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code solver.PBSatSolverConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:solver.PBSatSolverConfig)
        com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.internal_static_solver_PBSatSolverConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.internal_static_solver_PBSatSolverConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig.class, com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig.Builder.class);
      }

      // Construct using com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        proofGeneration_ = false;
        useAtMostClauses_ = false;
        cnfMethod_ = 0;
        clauseMinimization_ = 0;
        initialPhase_ = false;
        varDecay_ = 0D;
        varInc_ = 0D;
        restartFirst_ = 0;
        restartInc_ = 0D;
        clauseDecay_ = 0D;
        lbLBDMinimizingClause_ = 0;
        lbLBDFrozenClause_ = 0;
        lbSizeMinimizingClause_ = 0;
        firstReduceDB_ = 0;
        specialIncReduceDB_ = 0;
        incReduceDB_ = 0;
        factorK_ = 0D;
        factorR_ = 0D;
        sizeLBDQueue_ = 0;
        sizeTrailQueue_ = 0;
        reduceOnSize_ = false;
        reduceOnSizeSize_ = 0;
        maxVarDecay_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.internal_static_solver_PBSatSolverConfig_descriptor;
      }

      @java.lang.Override
      public com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig getDefaultInstanceForType() {
        return com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig.getDefaultInstance();
      }

      @java.lang.Override
      public com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig build() {
        com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig buildPartial() {
        com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig result = new com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.proofGeneration_ = proofGeneration_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.useAtMostClauses_ = useAtMostClauses_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.cnfMethod_ = cnfMethod_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.clauseMinimization_ = clauseMinimization_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.initialPhase_ = initialPhase_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.varDecay_ = varDecay_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.varInc_ = varInc_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.restartFirst_ = restartFirst_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.restartInc_ = restartInc_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.clauseDecay_ = clauseDecay_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.lbLBDMinimizingClause_ = lbLBDMinimizingClause_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.lbLBDFrozenClause_ = lbLBDFrozenClause_;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.lbSizeMinimizingClause_ = lbSizeMinimizingClause_;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.firstReduceDB_ = firstReduceDB_;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.specialIncReduceDB_ = specialIncReduceDB_;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.incReduceDB_ = incReduceDB_;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.factorK_ = factorK_;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.factorR_ = factorR_;
        }
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.sizeLBDQueue_ = sizeLBDQueue_;
        }
        if (((from_bitField0_ & 0x00080000) != 0)) {
          result.sizeTrailQueue_ = sizeTrailQueue_;
        }
        if (((from_bitField0_ & 0x00100000) != 0)) {
          result.reduceOnSize_ = reduceOnSize_;
        }
        if (((from_bitField0_ & 0x00200000) != 0)) {
          result.reduceOnSizeSize_ = reduceOnSizeSize_;
        }
        if (((from_bitField0_ & 0x00400000) != 0)) {
          result.maxVarDecay_ = maxVarDecay_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig) {
          return mergeFrom((com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig other) {
        if (other == com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig.getDefaultInstance()) return this;
        if (other.getProofGeneration() != false) {
          setProofGeneration(other.getProofGeneration());
        }
        if (other.getUseAtMostClauses() != false) {
          setUseAtMostClauses(other.getUseAtMostClauses());
        }
        if (other.cnfMethod_ != 0) {
          setCnfMethodValue(other.getCnfMethodValue());
        }
        if (other.clauseMinimization_ != 0) {
          setClauseMinimizationValue(other.getClauseMinimizationValue());
        }
        if (other.getInitialPhase() != false) {
          setInitialPhase(other.getInitialPhase());
        }
        if (other.getVarDecay() != 0D) {
          setVarDecay(other.getVarDecay());
        }
        if (other.getVarInc() != 0D) {
          setVarInc(other.getVarInc());
        }
        if (other.getRestartFirst() != 0) {
          setRestartFirst(other.getRestartFirst());
        }
        if (other.getRestartInc() != 0D) {
          setRestartInc(other.getRestartInc());
        }
        if (other.getClauseDecay() != 0D) {
          setClauseDecay(other.getClauseDecay());
        }
        if (other.getLbLBDMinimizingClause() != 0) {
          setLbLBDMinimizingClause(other.getLbLBDMinimizingClause());
        }
        if (other.getLbLBDFrozenClause() != 0) {
          setLbLBDFrozenClause(other.getLbLBDFrozenClause());
        }
        if (other.getLbSizeMinimizingClause() != 0) {
          setLbSizeMinimizingClause(other.getLbSizeMinimizingClause());
        }
        if (other.getFirstReduceDB() != 0) {
          setFirstReduceDB(other.getFirstReduceDB());
        }
        if (other.getSpecialIncReduceDB() != 0) {
          setSpecialIncReduceDB(other.getSpecialIncReduceDB());
        }
        if (other.getIncReduceDB() != 0) {
          setIncReduceDB(other.getIncReduceDB());
        }
        if (other.getFactorK() != 0D) {
          setFactorK(other.getFactorK());
        }
        if (other.getFactorR() != 0D) {
          setFactorR(other.getFactorR());
        }
        if (other.getSizeLBDQueue() != 0) {
          setSizeLBDQueue(other.getSizeLBDQueue());
        }
        if (other.getSizeTrailQueue() != 0) {
          setSizeTrailQueue(other.getSizeTrailQueue());
        }
        if (other.getReduceOnSize() != false) {
          setReduceOnSize(other.getReduceOnSize());
        }
        if (other.getReduceOnSizeSize() != 0) {
          setReduceOnSizeSize(other.getReduceOnSizeSize());
        }
        if (other.getMaxVarDecay() != 0D) {
          setMaxVarDecay(other.getMaxVarDecay());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                proofGeneration_ = input.readBool();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                useAtMostClauses_ = input.readBool();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                cnfMethod_ = input.readEnum();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                clauseMinimization_ = input.readEnum();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                initialPhase_ = input.readBool();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 49: {
                varDecay_ = input.readDouble();
                bitField0_ |= 0x00000020;
                break;
              } // case 49
              case 57: {
                varInc_ = input.readDouble();
                bitField0_ |= 0x00000040;
                break;
              } // case 57
              case 64: {
                restartFirst_ = input.readInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 73: {
                restartInc_ = input.readDouble();
                bitField0_ |= 0x00000100;
                break;
              } // case 73
              case 81: {
                clauseDecay_ = input.readDouble();
                bitField0_ |= 0x00000200;
                break;
              } // case 81
              case 88: {
                lbLBDMinimizingClause_ = input.readInt32();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
              case 96: {
                lbLBDFrozenClause_ = input.readInt32();
                bitField0_ |= 0x00000800;
                break;
              } // case 96
              case 104: {
                lbSizeMinimizingClause_ = input.readInt32();
                bitField0_ |= 0x00001000;
                break;
              } // case 104
              case 112: {
                firstReduceDB_ = input.readInt32();
                bitField0_ |= 0x00002000;
                break;
              } // case 112
              case 120: {
                specialIncReduceDB_ = input.readInt32();
                bitField0_ |= 0x00004000;
                break;
              } // case 120
              case 128: {
                incReduceDB_ = input.readInt32();
                bitField0_ |= 0x00008000;
                break;
              } // case 128
              case 137: {
                factorK_ = input.readDouble();
                bitField0_ |= 0x00010000;
                break;
              } // case 137
              case 145: {
                factorR_ = input.readDouble();
                bitField0_ |= 0x00020000;
                break;
              } // case 145
              case 152: {
                sizeLBDQueue_ = input.readInt32();
                bitField0_ |= 0x00040000;
                break;
              } // case 152
              case 160: {
                sizeTrailQueue_ = input.readInt32();
                bitField0_ |= 0x00080000;
                break;
              } // case 160
              case 168: {
                reduceOnSize_ = input.readBool();
                bitField0_ |= 0x00100000;
                break;
              } // case 168
              case 176: {
                reduceOnSizeSize_ = input.readInt32();
                bitField0_ |= 0x00200000;
                break;
              } // case 176
              case 185: {
                maxVarDecay_ = input.readDouble();
                bitField0_ |= 0x00400000;
                break;
              } // case 185
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private boolean proofGeneration_ ;
      /**
       * <code>bool proofGeneration = 1;</code>
       * @return The proofGeneration.
       */
      @java.lang.Override
      public boolean getProofGeneration() {
        return proofGeneration_;
      }
      /**
       * <code>bool proofGeneration = 1;</code>
       * @param value The proofGeneration to set.
       * @return This builder for chaining.
       */
      public Builder setProofGeneration(boolean value) {

        proofGeneration_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>bool proofGeneration = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearProofGeneration() {
        bitField0_ = (bitField0_ & ~0x00000001);
        proofGeneration_ = false;
        onChanged();
        return this;
      }

      private boolean useAtMostClauses_ ;
      /**
       * <code>bool useAtMostClauses = 2;</code>
       * @return The useAtMostClauses.
       */
      @java.lang.Override
      public boolean getUseAtMostClauses() {
        return useAtMostClauses_;
      }
      /**
       * <code>bool useAtMostClauses = 2;</code>
       * @param value The useAtMostClauses to set.
       * @return This builder for chaining.
       */
      public Builder setUseAtMostClauses(boolean value) {

        useAtMostClauses_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>bool useAtMostClauses = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUseAtMostClauses() {
        bitField0_ = (bitField0_ & ~0x00000002);
        useAtMostClauses_ = false;
        onChanged();
        return this;
      }

      private int cnfMethod_ = 0;
      /**
       * <code>.solver.PBCnfMethod cnfMethod = 3;</code>
       * @return The enum numeric value on the wire for cnfMethod.
       */
      @java.lang.Override public int getCnfMethodValue() {
        return cnfMethod_;
      }
      /**
       * <code>.solver.PBCnfMethod cnfMethod = 3;</code>
       * @param value The enum numeric value on the wire for cnfMethod to set.
       * @return This builder for chaining.
       */
      public Builder setCnfMethodValue(int value) {
        cnfMethod_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBCnfMethod cnfMethod = 3;</code>
       * @return The cnfMethod.
       */
      @java.lang.Override
      public com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBCnfMethod getCnfMethod() {
        com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBCnfMethod result = com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBCnfMethod.forNumber(cnfMethod_);
        return result == null ? com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBCnfMethod.UNRECOGNIZED : result;
      }
      /**
       * <code>.solver.PBCnfMethod cnfMethod = 3;</code>
       * @param value The cnfMethod to set.
       * @return This builder for chaining.
       */
      public Builder setCnfMethod(com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBCnfMethod value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        cnfMethod_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBCnfMethod cnfMethod = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCnfMethod() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cnfMethod_ = 0;
        onChanged();
        return this;
      }

      private int clauseMinimization_ = 0;
      /**
       * <code>.solver.PBClauseMinimization clauseMinimization = 4;</code>
       * @return The enum numeric value on the wire for clauseMinimization.
       */
      @java.lang.Override public int getClauseMinimizationValue() {
        return clauseMinimization_;
      }
      /**
       * <code>.solver.PBClauseMinimization clauseMinimization = 4;</code>
       * @param value The enum numeric value on the wire for clauseMinimization to set.
       * @return This builder for chaining.
       */
      public Builder setClauseMinimizationValue(int value) {
        clauseMinimization_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBClauseMinimization clauseMinimization = 4;</code>
       * @return The clauseMinimization.
       */
      @java.lang.Override
      public com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization getClauseMinimization() {
        com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization result = com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization.forNumber(clauseMinimization_);
        return result == null ? com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization.UNRECOGNIZED : result;
      }
      /**
       * <code>.solver.PBClauseMinimization clauseMinimization = 4;</code>
       * @param value The clauseMinimization to set.
       * @return This builder for chaining.
       */
      public Builder setClauseMinimization(com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBClauseMinimization value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        clauseMinimization_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.solver.PBClauseMinimization clauseMinimization = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearClauseMinimization() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clauseMinimization_ = 0;
        onChanged();
        return this;
      }

      private boolean initialPhase_ ;
      /**
       * <code>bool initialPhase = 5;</code>
       * @return The initialPhase.
       */
      @java.lang.Override
      public boolean getInitialPhase() {
        return initialPhase_;
      }
      /**
       * <code>bool initialPhase = 5;</code>
       * @param value The initialPhase to set.
       * @return This builder for chaining.
       */
      public Builder setInitialPhase(boolean value) {

        initialPhase_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>bool initialPhase = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearInitialPhase() {
        bitField0_ = (bitField0_ & ~0x00000010);
        initialPhase_ = false;
        onChanged();
        return this;
      }

      private double varDecay_ ;
      /**
       * <code>double varDecay = 6;</code>
       * @return The varDecay.
       */
      @java.lang.Override
      public double getVarDecay() {
        return varDecay_;
      }
      /**
       * <code>double varDecay = 6;</code>
       * @param value The varDecay to set.
       * @return This builder for chaining.
       */
      public Builder setVarDecay(double value) {

        varDecay_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>double varDecay = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearVarDecay() {
        bitField0_ = (bitField0_ & ~0x00000020);
        varDecay_ = 0D;
        onChanged();
        return this;
      }

      private double varInc_ ;
      /**
       * <code>double varInc = 7;</code>
       * @return The varInc.
       */
      @java.lang.Override
      public double getVarInc() {
        return varInc_;
      }
      /**
       * <code>double varInc = 7;</code>
       * @param value The varInc to set.
       * @return This builder for chaining.
       */
      public Builder setVarInc(double value) {

        varInc_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>double varInc = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearVarInc() {
        bitField0_ = (bitField0_ & ~0x00000040);
        varInc_ = 0D;
        onChanged();
        return this;
      }

      private int restartFirst_ ;
      /**
       * <code>int32 restartFirst = 8;</code>
       * @return The restartFirst.
       */
      @java.lang.Override
      public int getRestartFirst() {
        return restartFirst_;
      }
      /**
       * <code>int32 restartFirst = 8;</code>
       * @param value The restartFirst to set.
       * @return This builder for chaining.
       */
      public Builder setRestartFirst(int value) {

        restartFirst_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>int32 restartFirst = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearRestartFirst() {
        bitField0_ = (bitField0_ & ~0x00000080);
        restartFirst_ = 0;
        onChanged();
        return this;
      }

      private double restartInc_ ;
      /**
       * <code>double restartInc = 9;</code>
       * @return The restartInc.
       */
      @java.lang.Override
      public double getRestartInc() {
        return restartInc_;
      }
      /**
       * <code>double restartInc = 9;</code>
       * @param value The restartInc to set.
       * @return This builder for chaining.
       */
      public Builder setRestartInc(double value) {

        restartInc_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>double restartInc = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearRestartInc() {
        bitField0_ = (bitField0_ & ~0x00000100);
        restartInc_ = 0D;
        onChanged();
        return this;
      }

      private double clauseDecay_ ;
      /**
       * <code>double clauseDecay = 10;</code>
       * @return The clauseDecay.
       */
      @java.lang.Override
      public double getClauseDecay() {
        return clauseDecay_;
      }
      /**
       * <code>double clauseDecay = 10;</code>
       * @param value The clauseDecay to set.
       * @return This builder for chaining.
       */
      public Builder setClauseDecay(double value) {

        clauseDecay_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>double clauseDecay = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearClauseDecay() {
        bitField0_ = (bitField0_ & ~0x00000200);
        clauseDecay_ = 0D;
        onChanged();
        return this;
      }

      private int lbLBDMinimizingClause_ ;
      /**
       * <code>int32 lbLBDMinimizingClause = 11;</code>
       * @return The lbLBDMinimizingClause.
       */
      @java.lang.Override
      public int getLbLBDMinimizingClause() {
        return lbLBDMinimizingClause_;
      }
      /**
       * <code>int32 lbLBDMinimizingClause = 11;</code>
       * @param value The lbLBDMinimizingClause to set.
       * @return This builder for chaining.
       */
      public Builder setLbLBDMinimizingClause(int value) {

        lbLBDMinimizingClause_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>int32 lbLBDMinimizingClause = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearLbLBDMinimizingClause() {
        bitField0_ = (bitField0_ & ~0x00000400);
        lbLBDMinimizingClause_ = 0;
        onChanged();
        return this;
      }

      private int lbLBDFrozenClause_ ;
      /**
       * <code>int32 lbLBDFrozenClause = 12;</code>
       * @return The lbLBDFrozenClause.
       */
      @java.lang.Override
      public int getLbLBDFrozenClause() {
        return lbLBDFrozenClause_;
      }
      /**
       * <code>int32 lbLBDFrozenClause = 12;</code>
       * @param value The lbLBDFrozenClause to set.
       * @return This builder for chaining.
       */
      public Builder setLbLBDFrozenClause(int value) {

        lbLBDFrozenClause_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>int32 lbLBDFrozenClause = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearLbLBDFrozenClause() {
        bitField0_ = (bitField0_ & ~0x00000800);
        lbLBDFrozenClause_ = 0;
        onChanged();
        return this;
      }

      private int lbSizeMinimizingClause_ ;
      /**
       * <code>int32 lbSizeMinimizingClause = 13;</code>
       * @return The lbSizeMinimizingClause.
       */
      @java.lang.Override
      public int getLbSizeMinimizingClause() {
        return lbSizeMinimizingClause_;
      }
      /**
       * <code>int32 lbSizeMinimizingClause = 13;</code>
       * @param value The lbSizeMinimizingClause to set.
       * @return This builder for chaining.
       */
      public Builder setLbSizeMinimizingClause(int value) {

        lbSizeMinimizingClause_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>int32 lbSizeMinimizingClause = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearLbSizeMinimizingClause() {
        bitField0_ = (bitField0_ & ~0x00001000);
        lbSizeMinimizingClause_ = 0;
        onChanged();
        return this;
      }

      private int firstReduceDB_ ;
      /**
       * <code>int32 firstReduceDB = 14;</code>
       * @return The firstReduceDB.
       */
      @java.lang.Override
      public int getFirstReduceDB() {
        return firstReduceDB_;
      }
      /**
       * <code>int32 firstReduceDB = 14;</code>
       * @param value The firstReduceDB to set.
       * @return This builder for chaining.
       */
      public Builder setFirstReduceDB(int value) {

        firstReduceDB_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>int32 firstReduceDB = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearFirstReduceDB() {
        bitField0_ = (bitField0_ & ~0x00002000);
        firstReduceDB_ = 0;
        onChanged();
        return this;
      }

      private int specialIncReduceDB_ ;
      /**
       * <code>int32 specialIncReduceDB = 15;</code>
       * @return The specialIncReduceDB.
       */
      @java.lang.Override
      public int getSpecialIncReduceDB() {
        return specialIncReduceDB_;
      }
      /**
       * <code>int32 specialIncReduceDB = 15;</code>
       * @param value The specialIncReduceDB to set.
       * @return This builder for chaining.
       */
      public Builder setSpecialIncReduceDB(int value) {

        specialIncReduceDB_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>int32 specialIncReduceDB = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearSpecialIncReduceDB() {
        bitField0_ = (bitField0_ & ~0x00004000);
        specialIncReduceDB_ = 0;
        onChanged();
        return this;
      }

      private int incReduceDB_ ;
      /**
       * <code>int32 incReduceDB = 16;</code>
       * @return The incReduceDB.
       */
      @java.lang.Override
      public int getIncReduceDB() {
        return incReduceDB_;
      }
      /**
       * <code>int32 incReduceDB = 16;</code>
       * @param value The incReduceDB to set.
       * @return This builder for chaining.
       */
      public Builder setIncReduceDB(int value) {

        incReduceDB_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>int32 incReduceDB = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearIncReduceDB() {
        bitField0_ = (bitField0_ & ~0x00008000);
        incReduceDB_ = 0;
        onChanged();
        return this;
      }

      private double factorK_ ;
      /**
       * <code>double factorK = 17;</code>
       * @return The factorK.
       */
      @java.lang.Override
      public double getFactorK() {
        return factorK_;
      }
      /**
       * <code>double factorK = 17;</code>
       * @param value The factorK to set.
       * @return This builder for chaining.
       */
      public Builder setFactorK(double value) {

        factorK_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <code>double factorK = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearFactorK() {
        bitField0_ = (bitField0_ & ~0x00010000);
        factorK_ = 0D;
        onChanged();
        return this;
      }

      private double factorR_ ;
      /**
       * <code>double factorR = 18;</code>
       * @return The factorR.
       */
      @java.lang.Override
      public double getFactorR() {
        return factorR_;
      }
      /**
       * <code>double factorR = 18;</code>
       * @param value The factorR to set.
       * @return This builder for chaining.
       */
      public Builder setFactorR(double value) {

        factorR_ = value;
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <code>double factorR = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearFactorR() {
        bitField0_ = (bitField0_ & ~0x00020000);
        factorR_ = 0D;
        onChanged();
        return this;
      }

      private int sizeLBDQueue_ ;
      /**
       * <code>int32 sizeLBDQueue = 19;</code>
       * @return The sizeLBDQueue.
       */
      @java.lang.Override
      public int getSizeLBDQueue() {
        return sizeLBDQueue_;
      }
      /**
       * <code>int32 sizeLBDQueue = 19;</code>
       * @param value The sizeLBDQueue to set.
       * @return This builder for chaining.
       */
      public Builder setSizeLBDQueue(int value) {

        sizeLBDQueue_ = value;
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <code>int32 sizeLBDQueue = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearSizeLBDQueue() {
        bitField0_ = (bitField0_ & ~0x00040000);
        sizeLBDQueue_ = 0;
        onChanged();
        return this;
      }

      private int sizeTrailQueue_ ;
      /**
       * <code>int32 sizeTrailQueue = 20;</code>
       * @return The sizeTrailQueue.
       */
      @java.lang.Override
      public int getSizeTrailQueue() {
        return sizeTrailQueue_;
      }
      /**
       * <code>int32 sizeTrailQueue = 20;</code>
       * @param value The sizeTrailQueue to set.
       * @return This builder for chaining.
       */
      public Builder setSizeTrailQueue(int value) {

        sizeTrailQueue_ = value;
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <code>int32 sizeTrailQueue = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearSizeTrailQueue() {
        bitField0_ = (bitField0_ & ~0x00080000);
        sizeTrailQueue_ = 0;
        onChanged();
        return this;
      }

      private boolean reduceOnSize_ ;
      /**
       * <code>bool reduceOnSize = 21;</code>
       * @return The reduceOnSize.
       */
      @java.lang.Override
      public boolean getReduceOnSize() {
        return reduceOnSize_;
      }
      /**
       * <code>bool reduceOnSize = 21;</code>
       * @param value The reduceOnSize to set.
       * @return This builder for chaining.
       */
      public Builder setReduceOnSize(boolean value) {

        reduceOnSize_ = value;
        bitField0_ |= 0x00100000;
        onChanged();
        return this;
      }
      /**
       * <code>bool reduceOnSize = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearReduceOnSize() {
        bitField0_ = (bitField0_ & ~0x00100000);
        reduceOnSize_ = false;
        onChanged();
        return this;
      }

      private int reduceOnSizeSize_ ;
      /**
       * <code>int32 reduceOnSizeSize = 22;</code>
       * @return The reduceOnSizeSize.
       */
      @java.lang.Override
      public int getReduceOnSizeSize() {
        return reduceOnSizeSize_;
      }
      /**
       * <code>int32 reduceOnSizeSize = 22;</code>
       * @param value The reduceOnSizeSize to set.
       * @return This builder for chaining.
       */
      public Builder setReduceOnSizeSize(int value) {

        reduceOnSizeSize_ = value;
        bitField0_ |= 0x00200000;
        onChanged();
        return this;
      }
      /**
       * <code>int32 reduceOnSizeSize = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearReduceOnSizeSize() {
        bitField0_ = (bitField0_ & ~0x00200000);
        reduceOnSizeSize_ = 0;
        onChanged();
        return this;
      }

      private double maxVarDecay_ ;
      /**
       * <code>double maxVarDecay = 23;</code>
       * @return The maxVarDecay.
       */
      @java.lang.Override
      public double getMaxVarDecay() {
        return maxVarDecay_;
      }
      /**
       * <code>double maxVarDecay = 23;</code>
       * @param value The maxVarDecay to set.
       * @return This builder for chaining.
       */
      public Builder setMaxVarDecay(double value) {

        maxVarDecay_ = value;
        bitField0_ |= 0x00400000;
        onChanged();
        return this;
      }
      /**
       * <code>double maxVarDecay = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxVarDecay() {
        bitField0_ = (bitField0_ & ~0x00400000);
        maxVarDecay_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:solver.PBSatSolverConfig)
    }

    // @@protoc_insertion_point(class_scope:solver.PBSatSolverConfig)
    private static final com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig();
    }

    public static com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PBSatSolverConfig>
        PARSER = new com.google.protobuf.AbstractParser<PBSatSolverConfig>() {
      @java.lang.Override
      public PBSatSolverConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PBSatSolverConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PBSatSolverConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.booleworks.logicng.serialization.solvers.sat.ProtoBufSolverCommons.PBSatSolverConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_solver_PBSatSolverConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_solver_PBSatSolverConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024solver_commons.proto\022\006solver\"\326\004\n\021PBSat" +
      "SolverConfig\022\027\n\017proofGeneration\030\001 \001(\010\022\030\n" +
      "\020useAtMostClauses\030\002 \001(\010\022&\n\tcnfMethod\030\003 \001" +
      "(\0162\023.solver.PBCnfMethod\0228\n\022clauseMinimiz" +
      "ation\030\004 \001(\0162\034.solver.PBClauseMinimizatio" +
      "n\022\024\n\014initialPhase\030\005 \001(\010\022\020\n\010varDecay\030\006 \001(" +
      "\001\022\016\n\006varInc\030\007 \001(\001\022\024\n\014restartFirst\030\010 \001(\005\022" +
      "\022\n\nrestartInc\030\t \001(\001\022\023\n\013clauseDecay\030\n \001(\001" +
      "\022\035\n\025lbLBDMinimizingClause\030\013 \001(\005\022\031\n\021lbLBD" +
      "FrozenClause\030\014 \001(\005\022\036\n\026lbSizeMinimizingCl" +
      "ause\030\r \001(\005\022\025\n\rfirstReduceDB\030\016 \001(\005\022\032\n\022spe" +
      "cialIncReduceDB\030\017 \001(\005\022\023\n\013incReduceDB\030\020 \001" +
      "(\005\022\017\n\007factorK\030\021 \001(\001\022\017\n\007factorR\030\022 \001(\001\022\024\n\014" +
      "sizeLBDQueue\030\023 \001(\005\022\026\n\016sizeTrailQueue\030\024 \001" +
      "(\005\022\024\n\014reduceOnSize\030\025 \001(\010\022\030\n\020reduceOnSize" +
      "Size\030\026 \001(\005\022\023\n\013maxVarDecay\030\027 \001(\001*5\n\024PBCla" +
      "useMinimization\022\010\n\004NONE\020\000\022\t\n\005BASIC\020\001\022\010\n\004" +
      "DEEP\020\002*G\n\013PBCnfMethod\022\017\n\013FACTORY_CNF\020\000\022\020" +
      "\n\014PG_ON_SOLVER\020\001\022\025\n\021FULL_PG_ON_SOLVER\020\002B" +
      "I\n0com.booleworks.logicng.serialization." +
      "solvers.satB\025ProtoBufSolverCommonsb\006prot" +
      "o3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_solver_PBSatSolverConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_solver_PBSatSolverConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_solver_PBSatSolverConfig_descriptor,
        new java.lang.String[] { "ProofGeneration", "UseAtMostClauses", "CnfMethod", "ClauseMinimization", "InitialPhase", "VarDecay", "VarInc", "RestartFirst", "RestartInc", "ClauseDecay", "LbLBDMinimizingClause", "LbLBDFrozenClause", "LbSizeMinimizingClause", "FirstReduceDB", "SpecialIncReduceDB", "IncReduceDB", "FactorK", "FactorR", "SizeLBDQueue", "SizeTrailQueue", "ReduceOnSize", "ReduceOnSizeSize", "MaxVarDecay", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
